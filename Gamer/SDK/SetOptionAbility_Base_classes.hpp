#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SetOptionAbility_Base

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "M1_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass SetOptionAbility_Base.SetOptionAbility_Base_C
// 0x0038 (0x02D8 - 0x02A0)
class USetOptionAbility_Base_C : public UM1Ability
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FGameplayTagContainer                  DuringActivateOpTags;                              // 0x02A8(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	double                                        LastActivatedTimeStamp;                            // 0x02C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        AbilityCooltime;                                   // 0x02D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BP_OnActivated();
	void CanActivateByRatio(double Ratio, bool* bResult);
	void CheckCooltime(bool* bCanActivate);
	void ExecuteUbergraph_SetOptionAbility_Base(int32 EntryPoint);
	void SetLastActivatedTimeStamp();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"SetOptionAbility_Base_C">();
	}
	static class USetOptionAbility_Base_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<USetOptionAbility_Base_C>();
	}
};
static_assert(alignof(USetOptionAbility_Base_C) == 0x000008, "Wrong alignment on USetOptionAbility_Base_C");
static_assert(sizeof(USetOptionAbility_Base_C) == 0x0002D8, "Wrong size on USetOptionAbility_Base_C");
static_assert(offsetof(USetOptionAbility_Base_C, UberGraphFrame) == 0x0002A0, "Member 'USetOptionAbility_Base_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(USetOptionAbility_Base_C, DuringActivateOpTags) == 0x0002A8, "Member 'USetOptionAbility_Base_C::DuringActivateOpTags' has a wrong offset!");
static_assert(offsetof(USetOptionAbility_Base_C, LastActivatedTimeStamp) == 0x0002C8, "Member 'USetOptionAbility_Base_C::LastActivatedTimeStamp' has a wrong offset!");
static_assert(offsetof(USetOptionAbility_Base_C, AbilityCooltime) == 0x0002D0, "Member 'USetOptionAbility_Base_C::AbilityCooltime' has a wrong offset!");

}

