#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: F_007_Head_BP

#include "Basic.hpp"

#include "AnimGraphRuntime_structs.hpp"
#include "M1_classes.hpp"
#include "Engine_structs.hpp"
#include "F_007_Head_BP_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass F_007_Head_BP.F_007_Head_BP_C
// 0x0270 (0x05E0 - 0x0370)
class UF_007_Head_BP_C final : public UM1HeadAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0370(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct F_007_Head_BP::FAnimBlueprintGeneratedMutableData __AnimBlueprintMutables;                           // 0x0378(0x0010)(HasGetValueTypeHash)
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0388(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0390(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0398(0x0020)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer;                    // 0x03B8(0x0070)()
	struct FAnimNode_ApplyAdditive                AnimGraphNode_ApplyAdditive;                       // 0x0428(0x00C8)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x04F0(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x0538(0x0048)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x0580(0x0048)()
	bool                                          bGleyHairFx;                                       // 0x05C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C9[0x7];                                      // 0x05C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        LocoMoveYaw;                                       // 0x05D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LocoSpeed;                                         // 0x05D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_F_007_Head_BP(int32 EntryPoint);
	void AnimGraph(struct FPoseLink* AnimGraph_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"F_007_Head_BP_C">();
	}
	static class UF_007_Head_BP_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UF_007_Head_BP_C>();
	}
};
static_assert(alignof(UF_007_Head_BP_C) == 0x000010, "Wrong alignment on UF_007_Head_BP_C");
static_assert(sizeof(UF_007_Head_BP_C) == 0x0005E0, "Wrong size on UF_007_Head_BP_C");
static_assert(offsetof(UF_007_Head_BP_C, UberGraphFrame) == 0x000370, "Member 'UF_007_Head_BP_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UF_007_Head_BP_C, __AnimBlueprintMutables) == 0x000378, "Member 'UF_007_Head_BP_C::__AnimBlueprintMutables' has a wrong offset!");
static_assert(offsetof(UF_007_Head_BP_C, AnimBlueprintExtension_PropertyAccess) == 0x000388, "Member 'UF_007_Head_BP_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UF_007_Head_BP_C, AnimBlueprintExtension_Base) == 0x000390, "Member 'UF_007_Head_BP_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UF_007_Head_BP_C, AnimGraphNode_Root) == 0x000398, "Member 'UF_007_Head_BP_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UF_007_Head_BP_C, AnimGraphNode_BlendSpacePlayer) == 0x0003B8, "Member 'UF_007_Head_BP_C::AnimGraphNode_BlendSpacePlayer' has a wrong offset!");
static_assert(offsetof(UF_007_Head_BP_C, AnimGraphNode_ApplyAdditive) == 0x000428, "Member 'UF_007_Head_BP_C::AnimGraphNode_ApplyAdditive' has a wrong offset!");
static_assert(offsetof(UF_007_Head_BP_C, AnimGraphNode_BlendListByBool) == 0x0004F0, "Member 'UF_007_Head_BP_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UF_007_Head_BP_C, AnimGraphNode_SequencePlayer_1) == 0x000538, "Member 'UF_007_Head_BP_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UF_007_Head_BP_C, AnimGraphNode_SequencePlayer) == 0x000580, "Member 'UF_007_Head_BP_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UF_007_Head_BP_C, bGleyHairFx) == 0x0005C8, "Member 'UF_007_Head_BP_C::bGleyHairFx' has a wrong offset!");
static_assert(offsetof(UF_007_Head_BP_C, LocoMoveYaw) == 0x0005D0, "Member 'UF_007_Head_BP_C::LocoMoveYaw' has a wrong offset!");
static_assert(offsetof(UF_007_Head_BP_C, LocoSpeed) == 0x0005D8, "Member 'UF_007_Head_BP_C::LocoSpeed' has a wrong offset!");

}

