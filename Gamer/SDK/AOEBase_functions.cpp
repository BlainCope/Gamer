#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AOEBase

#include "Basic.hpp"

#include "AOEBase_classes.hpp"
#include "AOEBase_parameters.hpp"


namespace SDK
{

// Function AOEBase.AOEBase_C.BP_OnPostSpawnAbilityActor
// (Event, Protected, BlueprintEvent)

void AAOEBase_C::BP_OnPostSpawnAbilityActor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AOEBase_C", "BP_OnPostSpawnAbilityActor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AOEBase.AOEBase_C.CheckHitInterval
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class AActor*>                   OverlappedTargets                                      (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// TArray<class AActor*>                   OutExecuteTargets                                      (Parm, OutParm)

void AAOEBase_C::CheckHitInterval(TArray<class AActor*>& OverlappedTargets, TArray<class AActor*>* OutExecuteTargets)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AOEBase_C", "CheckHitInterval");

	Params::AOEBase_C_CheckHitInterval Parms{};

	Parms.OverlappedTargets = std::move(OverlappedTargets);

	UObject::ProcessEvent(Func, &Parms);

	OverlappedTargets = std::move(Parms.OverlappedTargets);

	if (OutExecuteTargets != nullptr)
		*OutExecuteTargets = std::move(Parms.OutExecuteTargets);
}


// Function AOEBase.AOEBase_C.Clear
// (Public, BlueprintCallable, BlueprintEvent)

void AAOEBase_C::Clear()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AOEBase_C", "Clear");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AOEBase.AOEBase_C.DebugDrawHitCheckRange
// (Public, BlueprintCallable, BlueprintEvent)

void AAOEBase_C::DebugDrawHitCheckRange()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AOEBase_C", "DebugDrawHitCheckRange");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AOEBase.AOEBase_C.Event EndOfDuration
// (BlueprintCallable, BlueprintEvent)

void AAOEBase_C::Event_EndOfDuration()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AOEBase_C", "Event EndOfDuration");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AOEBase.AOEBase_C.ExecuteHitInterval
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           ExecuteTarget                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AAOEBase_C::ExecuteHitInterval(class AActor* ExecuteTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AOEBase_C", "ExecuteHitInterval");

	Params::AOEBase_C_ExecuteHitInterval Parms{};

	Parms.ExecuteTarget = ExecuteTarget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AOEBase.AOEBase_C.ExecuteUbergraph_AOEBase
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AAOEBase_C::ExecuteUbergraph_AOEBase(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AOEBase_C", "ExecuteUbergraph_AOEBase");

	Params::AOEBase_C_ExecuteUbergraph_AOEBase Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AOEBase.AOEBase_C.FindOverlapActors
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class AActor*>                   OutActors                                              (Parm, OutParm)

void AAOEBase_C::FindOverlapActors(TArray<class AActor*>* OutActors)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AOEBase_C", "FindOverlapActors");

	Params::AOEBase_C_FindOverlapActors Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutActors != nullptr)
		*OutActors = std::move(Parms.OutActors);
}


// Function AOEBase.AOEBase_C.GetDecalSize
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double                                  OutSize                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AAOEBase_C::GetDecalSize(double* OutSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AOEBase_C", "GetDecalSize");

	Params::AOEBase_C_GetDecalSize Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutSize != nullptr)
		*OutSize = Parms.OutSize;
}


// Function AOEBase.AOEBase_C.GetRemainDuration
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double                                  OutRemainDuration                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AAOEBase_C::GetRemainDuration(double* OutRemainDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AOEBase_C", "GetRemainDuration");

	Params::AOEBase_C_GetRemainDuration Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutRemainDuration != nullptr)
		*OutRemainDuration = Parms.OutRemainDuration;
}


// Function AOEBase.AOEBase_C.InitializeFxParams
// (Public, BlueprintCallable, BlueprintEvent)

void AAOEBase_C::InitializeFxParams()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AOEBase_C", "InitializeFxParams");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AOEBase.AOEBase_C.OnEndOfDuration
// (Public, BlueprintCallable, BlueprintEvent)

void AAOEBase_C::OnEndOfDuration()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AOEBase_C", "OnEndOfDuration");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AOEBase.AOEBase_C.OverlapChecker
// (BlueprintCallable, BlueprintEvent)

void AAOEBase_C::OverlapChecker()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AOEBase_C", "OverlapChecker");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AOEBase.AOEBase_C.StartFadeIn
// (Public, BlueprintCallable, BlueprintEvent)

void AAOEBase_C::StartFadeIn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AOEBase_C", "StartFadeIn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AOEBase.AOEBase_C.StartFadeOut
// (Public, BlueprintCallable, BlueprintEvent)

void AAOEBase_C::StartFadeOut()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AOEBase_C", "StartFadeOut");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AOEBase.AOEBase_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void AAOEBase_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AOEBase_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}

}

