#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Sec_PC_010_U_VAR_BODY_000

#include "Basic.hpp"

#include "M1_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "M1AnimPhys_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass BP_Sec_PC_010_U_VAR_BODY_000.BP_Sec_PC_010_U_VAR_BODY_000_C
// 0x06F0 (0x0A10 - 0x0320)
class UBP_Sec_PC_010_U_VAR_BODY_000_C final : public UAnimInstance
{
public:
	uint8                                         Pad_318[0x8];                                      // 0x0318(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0320(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0328(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0330(0x0008)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose;                     // 0x0338(0x00C8)()
	struct FM1AnimNode_ApplyFacialAdditive        M1AnimGraphNode_ApplyFacialAdditive;               // 0x0400(0x0098)()
	uint8                                         Pad_498[0x8];                                      // 0x0498(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FM1AnimNode_AnimPhys                   M1AnimGraphNode_AnimPhys;                          // 0x04A0(0x03D0)()
	struct FM1AnimNode_ModifyBone_Expression      M1AnimGraphNode_ModifyBone_Expression;             // 0x0870(0x0170)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x09E0(0x0020)()
	double                                        KawaiiAlpha;                                       // 0x0A00(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(const struct FPoseLink& InPose, struct FPoseLink* AnimGraph_0);
	void BlueprintThreadSafeUpdateAnimation(float DeltaTime);
	void ExecuteUbergraph_BP_Sec_PC_010_U_VAR_BODY_000(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Sec_PC_010_U_VAR_BODY_000_C">();
	}
	static class UBP_Sec_PC_010_U_VAR_BODY_000_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_Sec_PC_010_U_VAR_BODY_000_C>();
	}
};
static_assert(alignof(UBP_Sec_PC_010_U_VAR_BODY_000_C) == 0x000010, "Wrong alignment on UBP_Sec_PC_010_U_VAR_BODY_000_C");
static_assert(sizeof(UBP_Sec_PC_010_U_VAR_BODY_000_C) == 0x000A10, "Wrong size on UBP_Sec_PC_010_U_VAR_BODY_000_C");
static_assert(offsetof(UBP_Sec_PC_010_U_VAR_BODY_000_C, UberGraphFrame) == 0x000320, "Member 'UBP_Sec_PC_010_U_VAR_BODY_000_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_Sec_PC_010_U_VAR_BODY_000_C, AnimBlueprintExtension_PropertyAccess) == 0x000328, "Member 'UBP_Sec_PC_010_U_VAR_BODY_000_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UBP_Sec_PC_010_U_VAR_BODY_000_C, AnimBlueprintExtension_Base) == 0x000330, "Member 'UBP_Sec_PC_010_U_VAR_BODY_000_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UBP_Sec_PC_010_U_VAR_BODY_000_C, AnimGraphNode_LinkedInputPose) == 0x000338, "Member 'UBP_Sec_PC_010_U_VAR_BODY_000_C::AnimGraphNode_LinkedInputPose' has a wrong offset!");
static_assert(offsetof(UBP_Sec_PC_010_U_VAR_BODY_000_C, M1AnimGraphNode_ApplyFacialAdditive) == 0x000400, "Member 'UBP_Sec_PC_010_U_VAR_BODY_000_C::M1AnimGraphNode_ApplyFacialAdditive' has a wrong offset!");
static_assert(offsetof(UBP_Sec_PC_010_U_VAR_BODY_000_C, M1AnimGraphNode_AnimPhys) == 0x0004A0, "Member 'UBP_Sec_PC_010_U_VAR_BODY_000_C::M1AnimGraphNode_AnimPhys' has a wrong offset!");
static_assert(offsetof(UBP_Sec_PC_010_U_VAR_BODY_000_C, M1AnimGraphNode_ModifyBone_Expression) == 0x000870, "Member 'UBP_Sec_PC_010_U_VAR_BODY_000_C::M1AnimGraphNode_ModifyBone_Expression' has a wrong offset!");
static_assert(offsetof(UBP_Sec_PC_010_U_VAR_BODY_000_C, AnimGraphNode_Root) == 0x0009E0, "Member 'UBP_Sec_PC_010_U_VAR_BODY_000_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UBP_Sec_PC_010_U_VAR_BODY_000_C, KawaiiAlpha) == 0x000A00, "Member 'UBP_Sec_PC_010_U_VAR_BODY_000_C::KawaiiAlpha' has a wrong offset!");

}

