#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SetOptionAbility_Base

#include "Basic.hpp"

#include "SetOptionAbility_Base_classes.hpp"
#include "SetOptionAbility_Base_parameters.hpp"


namespace SDK
{

// Function SetOptionAbility_Base.SetOptionAbility_Base_C.BP_OnActivated
// (Event, Protected, BlueprintEvent)

void USetOptionAbility_Base_C::BP_OnActivated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SetOptionAbility_Base_C", "BP_OnActivated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SetOptionAbility_Base.SetOptionAbility_Base_C.CanActivateByRatio
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Ratio                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bResult                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USetOptionAbility_Base_C::CanActivateByRatio(double Ratio, bool* bResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SetOptionAbility_Base_C", "CanActivateByRatio");

	Params::SetOptionAbility_Base_C_CanActivateByRatio Parms{};

	Parms.Ratio = Ratio;

	UObject::ProcessEvent(Func, &Parms);

	if (bResult != nullptr)
		*bResult = Parms.bResult;
}


// Function SetOptionAbility_Base.SetOptionAbility_Base_C.CheckCooltime
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bCanActivate                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USetOptionAbility_Base_C::CheckCooltime(bool* bCanActivate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SetOptionAbility_Base_C", "CheckCooltime");

	Params::SetOptionAbility_Base_C_CheckCooltime Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bCanActivate != nullptr)
		*bCanActivate = Parms.bCanActivate;
}


// Function SetOptionAbility_Base.SetOptionAbility_Base_C.ExecuteUbergraph_SetOptionAbility_Base
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USetOptionAbility_Base_C::ExecuteUbergraph_SetOptionAbility_Base(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SetOptionAbility_Base_C", "ExecuteUbergraph_SetOptionAbility_Base");

	Params::SetOptionAbility_Base_C_ExecuteUbergraph_SetOptionAbility_Base Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SetOptionAbility_Base.SetOptionAbility_Base_C.SetLastActivatedTimeStamp
// (Public, BlueprintCallable, BlueprintEvent)

void USetOptionAbility_Base_C::SetLastActivatedTimeStamp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SetOptionAbility_Base_C", "SetLastActivatedTimeStamp");

	UObject::ProcessEvent(Func, nullptr);
}

}

