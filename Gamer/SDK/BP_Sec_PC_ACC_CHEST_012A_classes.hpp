#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Sec_PC_ACC_CHEST_012A

#include "Basic.hpp"

#include "M1_classes.hpp"
#include "Engine_structs.hpp"
#include "M1AnimPhys_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass BP_Sec_PC_ACC_CHEST_012A.BP_Sec_PC_ACC_CHEST_012A_C
// 0x1040 (0x1380 - 0x0340)
class UBP_Sec_PC_ACC_CHEST_012A_C final : public UM1BaseAttachmentAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0340(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0348(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0350(0x0008)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose;                     // 0x0358(0x00C8)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0420(0x0020)()
	struct FM1AnimNode_AnimPhys                   M1AnimGraphNode_AnimPhys_3;                        // 0x0440(0x03D0)()
	struct FM1AnimNode_AnimPhys                   M1AnimGraphNode_AnimPhys_2;                        // 0x0810(0x03D0)()
	struct FM1AnimNode_AnimPhys                   M1AnimGraphNode_AnimPhys_1;                        // 0x0BE0(0x03D0)()
	struct FM1AnimNode_AnimPhys                   M1AnimGraphNode_AnimPhys;                          // 0x0FB0(0x03D0)()

public:
	void AnimGraph(const struct FPoseLink& InPose, struct FPoseLink* AnimGraph_0);
	void ExecuteUbergraph_BP_Sec_PC_ACC_CHEST_012A(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Sec_PC_ACC_CHEST_012A_C">();
	}
	static class UBP_Sec_PC_ACC_CHEST_012A_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_Sec_PC_ACC_CHEST_012A_C>();
	}
};
static_assert(alignof(UBP_Sec_PC_ACC_CHEST_012A_C) == 0x000010, "Wrong alignment on UBP_Sec_PC_ACC_CHEST_012A_C");
static_assert(sizeof(UBP_Sec_PC_ACC_CHEST_012A_C) == 0x001380, "Wrong size on UBP_Sec_PC_ACC_CHEST_012A_C");
static_assert(offsetof(UBP_Sec_PC_ACC_CHEST_012A_C, UberGraphFrame) == 0x000340, "Member 'UBP_Sec_PC_ACC_CHEST_012A_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_Sec_PC_ACC_CHEST_012A_C, AnimBlueprintExtension_PropertyAccess) == 0x000348, "Member 'UBP_Sec_PC_ACC_CHEST_012A_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UBP_Sec_PC_ACC_CHEST_012A_C, AnimBlueprintExtension_Base) == 0x000350, "Member 'UBP_Sec_PC_ACC_CHEST_012A_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UBP_Sec_PC_ACC_CHEST_012A_C, AnimGraphNode_LinkedInputPose) == 0x000358, "Member 'UBP_Sec_PC_ACC_CHEST_012A_C::AnimGraphNode_LinkedInputPose' has a wrong offset!");
static_assert(offsetof(UBP_Sec_PC_ACC_CHEST_012A_C, AnimGraphNode_Root) == 0x000420, "Member 'UBP_Sec_PC_ACC_CHEST_012A_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UBP_Sec_PC_ACC_CHEST_012A_C, M1AnimGraphNode_AnimPhys_3) == 0x000440, "Member 'UBP_Sec_PC_ACC_CHEST_012A_C::M1AnimGraphNode_AnimPhys_3' has a wrong offset!");
static_assert(offsetof(UBP_Sec_PC_ACC_CHEST_012A_C, M1AnimGraphNode_AnimPhys_2) == 0x000810, "Member 'UBP_Sec_PC_ACC_CHEST_012A_C::M1AnimGraphNode_AnimPhys_2' has a wrong offset!");
static_assert(offsetof(UBP_Sec_PC_ACC_CHEST_012A_C, M1AnimGraphNode_AnimPhys_1) == 0x000BE0, "Member 'UBP_Sec_PC_ACC_CHEST_012A_C::M1AnimGraphNode_AnimPhys_1' has a wrong offset!");
static_assert(offsetof(UBP_Sec_PC_ACC_CHEST_012A_C, M1AnimGraphNode_AnimPhys) == 0x000FB0, "Member 'UBP_Sec_PC_ACC_CHEST_012A_C::M1AnimGraphNode_AnimPhys' has a wrong offset!");

}

