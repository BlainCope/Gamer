#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PerkAbility_18_Penetrator

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "PerkAbility_HitBase_classes.hpp"
#include "M1Data_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass PerkAbility_18_Penetrator.PerkAbility_18_Penetrator_C
// 0x0038 (0x0308 - 0x02D0)
class UPerkAbility_18_Penetrator_C final : public UPerkAbility_HitBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_PerkAbility_18_Penetrator_C;        // 0x02D0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	double                                        ShieldDamageChance;                                // 0x02D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        NormalChance;                                      // 0x02E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ChampionChance;                                    // 0x02E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        NamedChance;                                       // 0x02F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        BossChance;                                        // 0x02F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        InvokeSEChance;                                    // 0x0300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void CanAppendDamageCalcMods(class AActor* HitActor, bool* Return_value);
	void ExecuteUbergraph_PerkAbility_18_Penetrator(int32 EntryPoint);
	void OnGiveDamageToByWeapon(const struct FM1CalcDamageInfo& DamageInfo);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"PerkAbility_18_Penetrator_C">();
	}
	static class UPerkAbility_18_Penetrator_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPerkAbility_18_Penetrator_C>();
	}
};
static_assert(alignof(UPerkAbility_18_Penetrator_C) == 0x000008, "Wrong alignment on UPerkAbility_18_Penetrator_C");
static_assert(sizeof(UPerkAbility_18_Penetrator_C) == 0x000308, "Wrong size on UPerkAbility_18_Penetrator_C");
static_assert(offsetof(UPerkAbility_18_Penetrator_C, UberGraphFrame_PerkAbility_18_Penetrator_C) == 0x0002D0, "Member 'UPerkAbility_18_Penetrator_C::UberGraphFrame_PerkAbility_18_Penetrator_C' has a wrong offset!");
static_assert(offsetof(UPerkAbility_18_Penetrator_C, ShieldDamageChance) == 0x0002D8, "Member 'UPerkAbility_18_Penetrator_C::ShieldDamageChance' has a wrong offset!");
static_assert(offsetof(UPerkAbility_18_Penetrator_C, NormalChance) == 0x0002E0, "Member 'UPerkAbility_18_Penetrator_C::NormalChance' has a wrong offset!");
static_assert(offsetof(UPerkAbility_18_Penetrator_C, ChampionChance) == 0x0002E8, "Member 'UPerkAbility_18_Penetrator_C::ChampionChance' has a wrong offset!");
static_assert(offsetof(UPerkAbility_18_Penetrator_C, NamedChance) == 0x0002F0, "Member 'UPerkAbility_18_Penetrator_C::NamedChance' has a wrong offset!");
static_assert(offsetof(UPerkAbility_18_Penetrator_C, BossChance) == 0x0002F8, "Member 'UPerkAbility_18_Penetrator_C::BossChance' has a wrong offset!");
static_assert(offsetof(UPerkAbility_18_Penetrator_C, InvokeSEChance) == 0x000300, "Member 'UPerkAbility_18_Penetrator_C::InvokeSEChance' has a wrong offset!");

}

